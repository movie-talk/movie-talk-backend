<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.movie.talk.dao.ReviewDao">

    <insert id="insertReview" parameterType="com.movie.talk.dto.Review">
        INSERT INTO review (user_id, rating, content, movie_id)
        VALUES (#{userId}, #{rating}, #{content}, #{movieId})
    </insert>

	<select id="findReviewById" resultType="com.movie.talk.dto.Review" parameterType="string">
        SELECT r.id, r.user_id, u.nickname, r.rating, r.content, r.movie_id, r.created_at
	    FROM review r
	    JOIN user u ON r.user_id = u.id
	    WHERE r.id = #{userId}
    </select>

    <delete id="deleteReview" parameterType="map">
        DELETE FROM review WHERE id = #{reviewId} AND user_id = #{userId}
    </delete>

    <update id="updateReview" parameterType="map">
        UPDATE review
        SET rating = #{rating}, content = #{content}
        WHERE id = #{reviewId} AND user_id = #{userId}
    </update>
    
	<select id="selectReviewsByUserId" resultType="com.movie.talk.dto.Review" parameterType="String">
	    SELECT r.id, r.user_id, u.nickname, r.rating, r.content, r.movie_id, r.created_at
	    FROM review r
	    JOIN user u ON r.user_id = u.id
	    WHERE r.user_id = #{userId}
	</select>
    
    <select id="selectReviewsByMovieId" resultType="com.movie.talk.dto.Review" parameterType="String">
    	SELECT r.id, r.user_id, u.nickname, r.rating, r.content, r.movie_id, r.created_at
	    FROM review r
	    JOIN user u ON r.user_id = u.id
	    WHERE r.movie_id = #{movie_id}
	</select>

    <select id="selectAllReviews" resultType="com.movie.talk.dto.Review">
        SELECT id, user_id, rating, content, movie_id
        FROM review
    </select>

</mapper>
